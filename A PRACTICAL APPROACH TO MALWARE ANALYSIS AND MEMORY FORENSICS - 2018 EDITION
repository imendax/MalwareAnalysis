A PRACTICAL APPROACH TO MALWARE ANALYSIS AND MEMORY FORENSICS - 2018 EDITION

https://www.blackhat.com/us-18/training/schedule/#a-practical-approach-to-malware-analysis-and-memory-forensics---2018-edition-9570


Malware analysis and memory forensics are powerful analysis and investigative techniques used in reverse engineering, 
digital forensics, and incident response. 
With adversaries becoming more sophisticated and carrying out advanced malware attacks on critical infrastructures, 
Data Centers, private and public organizations, detecting, responding and investigating such intrusions are 
essential to information security professionals. Malware analysis and memory Forensics have become 
a must-have skill for fighting advanced malwares, targeted attacks and security breaches. 

This training introduces you to the topic of malware analysis, reverse engineering, Windows internals, 
and techniques to perform malware and Rootkit investigations of real-world memory samples using 
the open source advanced memory forensics framework (Volatility). The training covers analysis 
and investigation of various real-world malware samples and infected memory images(crimewares, APT malwares, Rootkits, etc.) 
and contains hands-on labs to gain a better understanding of the subject.

The training provides practical guidance and attendees should walk away with the following skills:

How malware and Windows internals work
How to create a safe and isolated lab environment for malware analysis
Tools and techniques to perform malware analysis
How to perform static analysis to determine the metadata associated with malware
How to perform dynamic analysis of the malware to determine its interaction with process, file system, registry and network
How to perform code analysis to determine the malware functionality
How to debug a malware using tools like IDA Pro and x64dbg
How to analyze downloaders, droppers, keyloggers, fileless malwares, HTTP backdoors, etc.
Understanding various persistence techniques used by the attackers
Understanding different code injection techniques used to bypass security products
What is Memory Forensics and its use in malware and digital investigation
Ability to acquire a memory image from suspect/infected systems
How to use open source advanced memory forensics framework (Volatility)
Understanding of the techniques used by the malwares to hide from Live forensic tools
Understanding of the techniques used by Rootkits(code injection, hooking, etc.)
Investigative steps for detecting stealth and advanced malware
How memory forensics helps in malware analysis and reverse engineering
How to incorporate malware analysis and memory forensics in sandbox
How to determine the network and host-based indicators (IOC)
Techniques to hunt malwares

The following topics will be covered in this course:

Day 1:

Introduction to Malware Analysis
What is Malware
What they do
Why malware analysis
Types of malware analysis
Setting up an isolated lab environment

Static Analysis
Fingerprinting the malware
Extracting strings
Determining File obfuscation
Pattern matching using YARA
Fuzzing hashing & comparison
Understanding PE File characteristics
Hands-on lab exercise involves analyzing real malware sample

Dynamic Analysis/Behavioural analysis
Dynamic Analysis Steps
Understanding Dynamic Analysis tools
Simulating services
Performing Dynamic Analysis
Monitoring process, filesystem, registry and network activity
Determining the Indicators of compromise (host and network indicators)
Demo - Showing the static & dynamic analysis of real malware sample
Hands-on lab exercise involves analyzing real malware sample

Automating Malware Analysis(sandbox)
Custom Sandbox Overview
Working of Sandbox
Sandbox Features
Demo - Analyzing malware in the custom sandbox

Malware Persistence Methods
Run registry key
Scheduled Tasks
Startup Folder
Service
Winlogon registry entries
Image File Execution Options (IFEO)
Accessibility programs
AppInit_DLLs
DLL Search order hijacking
COM Hijacking
Hands-on lab exercise involves analyzing real malware sample

Day 2:

Assembly Language and Disassembly Primer
Program basics
CPU registers
Data transfer instructions
Arithmetic operations
Bitwise operations
Branching and conditionals
Loops
Functions
Arrays and strings
Structures
x64 architecture

Code Analysis
Code Analysis Overview
Disassembler & Debuggers
Code Analysis Tools
Basics of IDA Pro
Basics of x64dbg
Reversing Malware Functionalities
Downloader
Dropper
Keylogger
Malware replication via removable media
Malware Command & Control (C2)

Day 3: 

Process Injection Techniques
Remote DLL Injection
DLL injection using APC
Remote executable/shellCode Injection
Hollow Process Injection (Process Hollowing)
DLL Injection using SetWindowsHookEx()
DLL injection using Application shims


Introduction to Memory Forensics
What is Memory Forensics
Why Memory Forensics
Steps in Memory Forensics
Memory acquisition and tools
Acquiring memory From physical machine
Acquiring memory from virtual machine
Hands-on exercise involves acquiring the memory

Volatility Overview
Introduction to Volatility Advanced Memory Forensics Framework
Volatility Installation
Volatility basic commands
Determining the profile
Volatility help options
Running the plugin

Investigating Process
Understanding Process Internals
Process(EPROCESS) Structure
Process organization
Process Enumeration by walking the double linked list
process relationship (parent-child relationship)
Understanding DKOM attacks
Process Enumeration using pool tag scanning
Volatility plugins to enumerate processes
Identifying malware process
Hands-on lab exercise(scenario based) involves investigating malware infected memory

Investigating Process handles & Registry
Objects and handles overview
Enumerating process handles using Volatility
Understanding Mutex
Detecting malware presence using mutex
Understanding the Registry
Investigating common registry keys using Volatility
Detecting malware persistence
Hands-on lab exercise(scenario based) involves investigating malware infected memory
Day 4:

Investigating Network Activities
Understanding malware network activities
Volatility Network Plugins
Investigating Network connections
Investigating Sockets
Hands-on lab exercise(scenario based) involves investigating malware infected memory

Investigation Process Memory
Process memory Internals
Listing DLLs using Volatility
Identifying hidden DLLs
Dumping malicious executable from memory
Dumping Dll's from memory
Scanning the memory for patterns(yarascan)
Hands-on lab exercise(scenario based) involves investigating malware infected memory

Investigating User-Mode Rootkits & Fileless Malwares
Code Injection
Types of Code injection
Remote DLL injection
Remote Code injection
Reflective DLL injection
Hollow process injection
Demo - Case Study
Hands-on lab exercise(scenario based) involves investigating malware infected memory

Memory Forensics in Sandbox technology
Sandbox Overview
Integrating Memory Forensics into sandbox
Demo - showing use of memory forensics in custom sandbox

Investigating Kernel-Mode Rootkits
Understanding Rootkits
Understanding Functional call traversal in Windows
Level of Hooking/Modification on Windows
Kernel Volatility plugins
Hands-on lab exercise(scenario based) involves investigating malware infected memory
Demo - Rootkit Investigation

Memory Forensic Case Studies
Demo - Hunting an APT malware from Memory
